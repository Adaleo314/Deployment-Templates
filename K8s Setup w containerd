#Setting up Cloud9 with Kubernets
#Choose Ubuntu  
#Choose t3.small instances for each environment
#Choose SSH 
#Go to EC2 instance of each Cloud9 environment
#Allow all inbound traffic on all three instances
#Commands on control and workers

#Kubernetes Prerequisite Files
cat << EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

cat << EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward = 1
EOF

sudo sysctl --system

#Update and Install Containerd
sudo apt-get update && sudo apt-get install -y containerd.io

sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml
sudo systemctl restart containerd
sudo swapoff -a && sudo sed -i '/ swap / s/^/#/' /etc/fstab
sudo apt-get update && sudo apt-get install -y apt-transport-https curl

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main                                                                                                                                                                                             
EOF

#Update dependencies, install kubelet, kubeadm, & kubectl (Updated Versions of these can be used)
sudo apt-get update
sudo apt-get install -y kubelet=1.24.0-00 kubeadm=1.24.0-00 kubectl=1.24.0-00
#Set each service to only update manually
sudo apt-mark hold kubelet kubeadm kubectl

#Control node only# 
#Initiate the Cluster
sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --kubernetes-version 1.24.0

#After init runs, the next three lines of code will be output
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

#Ensure nodes 
kubectl get nodes
#Install Calico (Used for Container Networking in the Cluster)
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
#Worker Nodes COPY AND PASTE THIS FROM THE RESULT OF INIT#
sudo kubeadm join 172.31.1.224:6443 --token w8rgyk.w3klaxhxjbvw7wup --discovery-token-ca-cert-hash sha256: This provided after the init. copy and paste. Yours will obviously be different tokens and join IP.

#All container commands should be implemented on Control Node
kubectl get nodes
#Nodes should be created and in Ready Status





